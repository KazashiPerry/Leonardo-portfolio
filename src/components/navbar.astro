---
import Personal from "../components/personal.astro";
import Contact from '../components/contact.astro'
import Projects from '../components/projects.astro'
import Services from '../components/services.astro'
import Skills from '../components/skills.astro'
import { navbar } from '../config/navbar.json'
import { list } from "postcss";
component: Personal
component: Contact
component: Projects
component: Services
component: Skills
---

<button
  id="buttonMenu"
  class=" fixed w-full inset-x-0 items-center p-8 sm:block md:hidden text-blanco bg-gradient-to-r from-cyan-500 to-blue-500 z-30"
>
  <span class="sr-only">Open sidebar</span>
  <svg
    class="w-14 h-14 text-negro"
    aria-hidden="true"
    fill="currentColor"
    viewBox="0 0 20 20"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      clip-rule="evenodd"
      fill-rule="evenodd"
      d="M2 4.75A.75.75 0 012.75 4h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 4.75zm0 10.5a.75.75 0 01.75-.75h7.5a.75.75 0 010 1.5h-7.5a.75.75 0 01-.75-.75zM2 10a.75.75 0 01.75-.75h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 10z"
    ></path>
  </svg>
</button>

<nav
  id="navbar"
  class="fixed top-0 left-0 z-40 w-64 h-screen transition-transform -translate-x-full md:translate-x-0"
  aria-label="Sidebar"
>
  <div class="px-3 py-4 overflow-y-auto bg-celeste dark:bg-gris h-full">
    <a href="" class="flex items-center pl-2.5 mb-5">
      <!-- <img src="/public/Logo.svg" class="h-16 mr-3" alt="Portfolio logo" /> -->
      <span
        class="self-center font-bold whitespace-nowrap dark:text-sky-200 text-4xl pt-6 transition duration-500 ease-in-out transform hover:-translate-y-1"
        >| Portfolio</span
      >
      
    </a>
    <hr class="h-px my-8 bg-crema border-0 dark:bg-sky-200">

    <ul class="space-y-2 font-medium">
      
      {
        navbar.map((navbar) =>(
          <li>
            <a class="flex items-center p-2 rounded-lg hover:bg-blanco ml-3 text-3xl text-negro dark:text-sky-200 dark:hover:text-negro  font-semibold
            
            transition duration-500 ease-in-out dark:hover:bg-sky-200 transform hover:-translate-y-1 hover:scale-110"  href = { navbar.id }>{navbar.title}</a>
            </li>
            
        ) )
      }
  
    </ul>



    <div class="">
      <button
        id="theme-toggle"
        type="button"
        class="text-celeste hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-700 rounded-lg text-sm p-2.5 mt-3"
      >
        <svg
          id="theme-toggle-dark-icon"
          class="hidden w-16 h-16 text-negro"
          fill="currentColor"
          viewBox="0 0 20 20"
          xmlns="http://www.w3.org/2000/svg"
          ><path
            d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"
          ></path></svg
        >
        <svg
          id="theme-toggle-light-icon"
          class="hidden w-16 h-16"
          fill="currentColor"
          viewBox="0 0 20 20"
          xmlns="http://www.w3.org/2000/svg"
          ><path
            d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z"
            fill-rule="evenodd"
            clip-rule="evenodd"></path></svg
        >
      </button>
      <div id="back" class="mt-60">
        <button>
          
            <span
              class="material-symbols-outlined text-negro dark:text-celeste-crema text-7xl hover:scale-125 transition-all sm:block md:hidden"
            >
              arrow_back
            </span>
          </a>
        </button>
      </div>
    </div>

    
<!-- <div class="flex ">
  <div id="states-button" data-dropdown-toggle="dropdown-states" class="flex-shrink-0 z-10 inline-flex items-center py-2.5 px-4 text-sm font-medium text-center text-negro bg-gray-100 border border-gray-300 rounded-l-lg  focus:ring-4 focus:outline-none focus:ring-gray-100 dark:bg-gray-700  dark:focus:ring-gray-700 dark:text-white dark:border-gray-600">
      
      Language

  </div>
  
  
  <select id="idioma" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-r-lg border-l-gray-100 dark:border-l-gray-700 border-l-2 focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500">
      <option value="CA">English</option>
      <option value="ES">Español</option>
      <option value="PT">Português</option>
      
  </select>
</div> -->


    </div>

  </div>
</nav>




<script>
  var themeToggleDarkIcon = document.getElementById("theme-toggle-dark-icon");
  var themeToggleLightIcon = document.getElementById("theme-toggle-light-icon");

  // Change the icons inside the button based on previous settings
  if (
    localStorage.getItem("color-theme") === "dark" ||
    (!("color-theme" in localStorage) &&
      window.matchMedia("(prefers-color-scheme: dark)").matches)
  ) {
    themeToggleLightIcon.classList.remove("hidden");
  } else {
    themeToggleDarkIcon.classList.remove("hidden");
  }

  var themeToggleBtn = document.getElementById("theme-toggle");

  themeToggleBtn.addEventListener("click", function () {
    // toggle icons inside button
    themeToggleDarkIcon.classList.toggle("hidden");
    themeToggleLightIcon.classList.toggle("hidden");

    // if set via local storage previously
    if (localStorage.getItem("color-theme")) {
      if (localStorage.getItem("color-theme") === "light") {
        document.documentElement.classList.add("dark");
        localStorage.setItem("color-theme", "dark");
      } else {
        document.documentElement.classList.remove("dark");
        localStorage.setItem("color-theme", "light");
      }

      // if NOT set via local storage previously
    } else {
      if (document.documentElement.classList.contains("dark")) {
        document.documentElement.classList.remove("dark");
        localStorage.setItem("color-theme", "light");
      } else {
        document.documentElement.classList.add("dark");
        localStorage.setItem("color-theme", "dark");
      }
    }
  });

  //Interacción del botón con el sidenav
  const Nav = document.getElementById("navbar");
  const state = Nav.getAttribute("state");
  const buttonNav = document.getElementById("buttonMenu");
  const backButton = document.getElementById("back");

  buttonNav.addEventListener("click", () => {
    Nav.classList.toggle("-translate-x-full");
  });

  backButton.addEventListener("click", () => {
    Nav.classList.toggle("-translate-x-full");
  });

  // -translate-x-full
  // icon.addEventListener("click", () => {
  /* icon.setAttribute(
    "name",
    icon.getAttribute("name") === "menu-outline"
      ? "close-outline"
      : "menu-outline"
  );
  const name = icon.getAttribute("name");
  if (name == "close-outline") {
    Nav.classList.remove("hidden");
  } else {
    Nav.classList.add("hidden");
  }
}); */



</script>
